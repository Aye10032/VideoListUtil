import java.text.SimpleDateFormat

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'

group 'com.aye10032'
version '1.0'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    implementation 'com.formdev:flatlaf:1.0-rc1'
    implementation 'com.formdev:flatlaf-extras:1.0-rc1'
    implementation 'com.formdev:flatlaf-intellij-themes:1.0-rc1'

    // https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
    compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.2'


    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.8.0'
    // https://mvnrepository.com/artifact/commons-codec/commons-codec
    compile group: 'commons-codec', name: 'commons-codec', version: '1.15'

    // https://mvnrepository.com/artifact/org.mybatis/mybatis
    compile group: 'org.mybatis', name: 'mybatis', version: '3.5.6'
    // https://mvnrepository.com/artifact/org.xerial/sqlite-jdbc
    compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.34.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    // https://mvnrepository.com/artifact/log4j/log4j
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
}

test {
    useJUnitPlatform()
}

shadowJar {
    // 生成包的命名规则： baseName-version-classifier.jar
    manifest {
        attributes(
                'Main-Class': 'com.aye10032.MainRun'//入口点
        )
    }

    // 将 build.gradle 打入到 jar 中, 方便查看依赖包版本
    from("./"){
        include 'build.gradle'
    }
}


// 点这个箭头进行打包
jar {
    //把以前的重命名归档起来
    destinationDir = file("$rootDir/build")
    File oldJarFile = file(destinationDir.toString() + "/" + rootProject.name + "-" + version + ".jar")
    SimpleDateFormat ft = new SimpleDateFormat("MM-dd-hh-mm-ss")
    File newJarFile = file(destinationDir.toString() + "/" + rootProject.name + "-" + version + "-" + ft.format(new Date()) + ".jar")
    if (oldJarFile.exists()) {
        oldJarFile.renameTo(newJarFile)
    }
    if (newJarFile.exists()) {
        ant.move file: newJarFile,
                todir: "${buildDir}/toArchive"
    }

    manifest {
        //mainifest下的classpath头
        def classpathPrefix = 'libs'
        Set<File> files = configurations.runtimeClasspath.files
        def builder = new StringBuilder()
        for (def f : files) {
            builder.append(classpathPrefix).append("\\").append(f.getName()).append(" ")
        }
        attributes('Main-Class': 'com.aye10032.MainRun')//入口点
        attributes('Class-Path': builder.toString())
    }

    // 将 build.gradle 打入到 jar 中, 方便查看依赖包版本
    from("./") {
        include 'build.gradle'
    }

    //会自动把依赖复制到编译目录下的libs文件夹里面
    //如果有添加新的依赖记得复制到运行环境下的libs
    copy() {
        from configurations.runtimeClasspath.collect { it }
        into "$buildDir/libs"
    }
}